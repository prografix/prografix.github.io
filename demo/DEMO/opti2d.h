
#ifndef OPTI2D_H
#define OPTI2D_H

#include "Vector2d.h"
#include "ShevArray.h"

//**************************** 23.08.2003 *********************************//
//
//          Минимальная окружность вокруг данных точек
//
//**************************** 12.02.2016 *********************************//

Def<Circle2d> minCircleAroundPoints ( CArrRef<Vector2d> data, DynArrRef<nat> * index = 0 );


//**************************** 05.11.2010 *********************************//
//
//          Минимальная окружность вокруг данных окружностей
//
//**************************** 09.01.2012 *********************************//

Def<Circle2d> minCircleAroundCircles ( CArrRef<Circle2d> data );


//**************************** 31.12.2009 *********************************//
//
//          Минимальная окружность пересекающая прямые
//
//**************************** 31.12.2009 *********************************//

Def<Circle2d> minCircle ( CArrRef<Line2d> line );


//**************************** 10.01.2009 *********************************//
//
//          Минимальный охватывающий фиксированный эллипс
//                      1e-6 <= ext <= 0.99
//
//**************************** 06.11.2009 *********************************//

Def<Ellipse2d> minEllipseAroundPoints ( double ext, CArrRef<Vector2d> points );


//**************************** 20.03.2009 *********************************//
//
//              Минимальный охватывающий свободный эллипс 
//                        A - минимум площади 
//
//**************************** 20.12.2010 *********************************//

Def<Ellipse2d> minEllipseAroundPointsA ( CArrRef<Vector2d> points );


//**************************** 23.05.2009 *********************************//
//
//              Минимальный охватывающий треугольник
//
//**************************** 18.02.2018 *********************************//

Def<Triangle2d> minTriangleAroundConvexPolygonA ( CCArrRef<Vector2d> & inner );
Def<Triangle2d> minTriangleAroundPolygonA       ( CCArrRef<Vector2d> & inner );
Def<Triangle2d> minTriangleAroundPointsA        ( CCArrRef<Vector2d> & inner );


//**************************** 12.07.2009 *********************************//
//
//              Минимальный охватывающий прямоугольник
//              A - минимум площади, Р - минимум периметра
//
//**************************** 14.03.2010 *********************************//

Def<Rectangle2d> minRectangleAroundConvexPolygonA ( CArrRef<Vector2d> inner );
Def<Rectangle2d> minRectangleAroundConvexPolygonP ( CArrRef<Vector2d> inner );
Def<Rectangle2d> minRectangleAroundPolygonA ( CArrRef<Vector2d> inner );
Def<Rectangle2d> minRectangleAroundPolygonP ( CArrRef<Vector2d> inner );
Def<Rectangle2d> minRectangleAroundPointsA ( CArrRef<Vector2d> inner );
Def<Rectangle2d> minRectangleAroundPointsP ( CArrRef<Vector2d> inner );


//**************************** 17.10.2015 *********************************//
//
//                    Минимальный охватывающий ромб
//              A - минимум площади, Р - минимум периметра
//
//**************************** 17.10.2015 *********************************//

Def<Rhombus2d> minRhombusAroundPointsA ( CArrRef<Vector2d> inner );
Def<Rhombus2d> minRhombusAroundPointsP ( CArrRef<Vector2d> inner );


//**************************** 23.05.2009 *********************************//
//
//              Минимальный охватывающий параллелограмм
//
//**************************** 16.02.2018 *********************************//

Def<Parallelogram2d> minParallelogramAroundConvexPolygonA ( CCArrRef<Vector2d> & inner );
Def<Parallelogram2d> minParallelogramAroundPolygonA       ( CCArrRef<Vector2d> & inner );
Def<Parallelogram2d> minParallelogramAroundPointsA        ( CCArrRef<Vector2d> & inner );


//**************************** 17.11.2015 *********************************//
//
//                  Минимальная охватывающая трапеция
//
//**************************** 17.11.2015 *********************************//

bool minTrapezoidAroundConvexPolygonA ( FixArrRef<Vector2d, 4> & outer, CCArrRef<Vector2d> & inner );
bool minTrapezoidAroundPolygonA       ( FixArrRef<Vector2d, 4> & outer, CCArrRef<Vector2d> & inner );
bool minTrapezoidAroundPointsA        ( FixArrRef<Vector2d, 4> & outer, CCArrRef<Vector2d> & inner );


//**************************** 22.02.2016 *********************************//
//
//                  Минимальный охватывающий N-угольник
//
//**************************** 22.02.2016 *********************************//

bool minNgonAroundConvexPolygonA ( ArrRef<Vector2d> outer, CArrRef<Vector2d> inner );
bool minNgonAroundPolygonA       ( ArrRef<Vector2d> outer, CArrRef<Vector2d> inner );
bool minNgonAroundPointsA        ( ArrRef<Vector2d> outer, CArrRef<Vector2d> inner );


//**************************** 29.10.2016 *********************************//
//
//            Минимальный охватывающий равноугольный многоугольник
//
//**************************** 29.10.2016 *********************************//

bool minEquianglarPolygonAroundConvexPolygonA ( ArrRef<Vector2d> & outer, CCArrRef<Vector2d> & inner );
bool minEquianglarPolygonAroundPolygonA       ( ArrRef<Vector2d> & outer, CCArrRef<Vector2d> & inner );
bool minEquianglarPolygonAroundPointsA        ( ArrRef<Vector2d> & outer, CCArrRef<Vector2d> & inner );


//**************************** 19.06.2004 *********************************//
//
//      Максимальная окружность вписанная в выпуклый многоугольник
//                       за время O ( n*log(n) )
//
//**************************** 05.07.2011 *********************************//

Def<Circle2d> maxCircle_NlogN ( CCArrRef< Line2d > & line );
Def<Circle2d> maxCircle_NlogN ( CCArrRef<Vector2d> & vert );


//**************************** 22.09.2006 *********************************//
//
//      Максимальная окружность вписанная в выпуклый многоугольник
//
//**************************** 22.02.2011 *********************************//

Def<Circle2d> maxCircleInConvexPolygon ( CCArrRef< Line2d > & line, nat & i1, nat & i2, nat & i3 );

Def<Circle2d> maxCircleInConvexPolygon ( CCArrRef< Line2d > & line );

Def<Circle2d> maxCircleInConvexPolygon ( CCArrRef<Vector2d> & vert );


//**************************** 19.03.2008 *********************************//
//
//      Максимальная окружность вписанная в невыпуклый многоугольник
//
//**************************** 14.01.2012 *********************************//

Def<Circle2d> maxCircleInPolygon ( CCArrRef<Vector2d> & vert );


//**************************** 13.12.2008 *********************************//
//
//   Максимальный фиксированный эллипс вписанный в выпуклый многоугольник
//                        1e-6 <= ext <= 0.99
//
//**************************** 22.12.2010 *********************************//

Def<Ellipse2d> maxFixEllipseInConvexPolygon ( double ext, CCArrRef<Vector2d> & poly );


//**************************** 17.09.2018 *********************************//
//
//            Максимальный фиксированный эллипс вписанный 
//               в выпуклый многоугольник без вращения
//                         1e-6 <= ext <= 1e6
//
//**************************** 17.09.2018 *********************************//

Def<Ellipse2d> maxFixEllipseInConvexPolygonNR ( double ext, CCArrRef<Vector2d> & poly );


//**************************** 02.06.2014 *********************************//
//
//  Максимальный фиксированный эллипс вписанный в невыпуклый многоугольник
//                        1/64 <= ext <= 64
//
//**************************** 02.06.2014 *********************************//

Def<Ellipse2d> maxFixEllipseInPolygon ( double ext, CCArrRef<Vector2d> & poly );


//**************************** 19.09.2018 *********************************//
//
//            Максимальный фиксированный эллипс вписанный 
//              в невыпуклый многоугольник без вращения
//                         1/64 <= ext <= 64
//
//**************************** 19.09.2018 *********************************//

Def<Ellipse2d> maxFixEllipseInPolygonNR ( double ext, CCArrRef<Vector2d> & poly );


//**************************** 29.09.2019 *********************************//
//
//      Максимальный свободный эллипс вписанный в треугольник
//                      A - максимум площади 
//
//**************************** 29.09.2019 *********************************//

Def<Ellipse2d> maxEllipseInTriangleA ( Vector2d v1, Vector2d v2, Vector2d v3 );


//**************************** 07.02.2009 *********************************//
//
//   Максимальный свободный эллипс вписанный в выпуклый многоугольник
//                      A - максимум площади 
//
//**************************** 16.04.2011 *********************************//

Def<Ellipse2d> maxEllipseInConvexPolygonA ( CCArrRef<Vector2d> & poly );


//**************************** 26.09.2018 *********************************//
//
//              Максимальный свободный эллипс вписанный 
//               в выпуклый многоугольник без вращения
//                      A - максимум площади 
//
//**************************** 26.09.2018 *********************************//

Def<Ellipse2d> maxEllipseInConvexPolygonANR ( CCArrRef<Vector2d> & poly );


//**************************** 04.06.2014 *********************************//
//
//   Максимальный свободный эллипс вписанный в невыпуклый многоугольник
//                      A - максимум площади 
//
//**************************** 04.06.2014 *********************************//

Def<Ellipse2d> maxEllipseInPolygonA ( CCArrRef<Vector2d> & poly );


//**************************** 22.09.2018 *********************************//
//
//              Максимальный свободный эллипс вписанный 
//              в невыпуклый многоугольник без вращения
//                      A - максимум площади 
//
//**************************** 22.09.2018 *********************************//

Def<Ellipse2d> maxEllipseInPolygonANR ( CCArrRef<Vector2d> & poly );


//**************************** 16.10.2008 *********************************//
//
//      Максимальный многоугольник вписанный в выпуклый многоугольник
//
//**************************** 01.07.2011 *********************************//

Def<Conform2d> maxPolygonInConvexPolygon ( CCArrRef<Vector2d> & inner, CCArrRef<Vector2d> & outer );


//**************************** 02.10.2018 *********************************//
//
// Максимальный многоугольник вписанный в выпуклый многоугольник без вращения
//
//**************************** 02.10.2018 *********************************//

Def<Conform2d> maxPolygonInConvexPolygonNR ( CCArrRef<Vector2d> & inner, CCArrRef<Vector2d> & outer );


//**************************** 25.04.2020 *********************************//
//
// Максимальный искажённый многоугольник вписанный в выпуклый многоугольник
//
//**************************** 25.04.2020 *********************************//

Def<Affin2d> maxAffinPolygonInConvexPolygon ( CCArrRef<Vector2d> & inner, CCArrRef<Vector2d> & outer );


//**************************** 26.04.2014 *********************************//
//
//      Максимальный выпуклый многоугольник вписанный в многоугольник
//
//**************************** 26.04.2014 *********************************//

Def<Conform2d> maxConvexPolygonInPolygon ( CCArrRef<Vector2d> & inner, CCArrRef<Vector2d> & outer );


//**************************** 14.01.2012 *********************************//
//
// Максимальный выпуклый многоугольник вписанный в многоугольник без вращения
//
//**************************** 14.01.2012 *********************************//

Def<Conform2d> maxConvexPolygonInPolygonNR ( CCArrRef<Vector2d> & inner, CCArrRef<Vector2d> & outer );


//**************************** 23.04.2009 *********************************//
//
//      Максимальный прямоугольник вписанный в выпуклый многоугольник
//                      A - максимум площади 
//
//**************************** 24.10.2015 *********************************//

Def<Rectangle2d> maxRectangleInConvexPolygonA ( CCArrRef<Vector2d> & poly );


//**************************** 15.09.2018 *********************************//
//
//           Максимальный по площади прямоугольник вписанный
//              в выпуклый многоугольник без вращения
//
//**************************** 15.09.2018 *********************************//

Def<Rectangle2d> maxRectangleInConvexPolygonANR ( CCArrRef<Vector2d> & poly );


//**************************** 07.06.2014 *********************************//
//
//     Максимальный прямоугольник вписанный в невыпуклый многоугольник
//                      A - максимум площади 
//
//**************************** 24.10.2015 *********************************//

Def<Rectangle2d> maxRectangleInPolygonA ( CCArrRef<Vector2d> & poly );


//**************************** 02.10.2018 *********************************//
//
//           Максимальный по площади прямоугольник вписанный
//              в невыпуклый многоугольник без вращения
//
//**************************** 02.10.2018 *********************************//

Def<Rectangle2d> maxRectangleInPolygonANR ( CCArrRef<Vector2d> & poly );


//**************************** 24.04.2009 *********************************//
//
//          Максимальный ромб вписанный в выпуклый многоугольник
//              A - максимум площади, P - максимум периметра 
//
//**************************** 24.10.2015 *********************************//

Def<Rhombus2d> maxRhombusInConvexPolygonA ( CCArrRef<Vector2d> & poly );
Def<Rhombus2d> maxRhombusInConvexPolygonP ( CCArrRef<Vector2d> & poly );


//**************************** 15.09.2018 *********************************//
//
//              Максимальный по площади ромб вписанный
//              в выпуклый многоугольник без вращения
//
//**************************** 15.09.2018 *********************************//

Def<Rhombus2d> maxRhombusInConvexPolygonANR ( CCArrRef<Vector2d> & outer );


//**************************** 07.06.2014 *********************************//
//
//          Максимальный ромб вписанный в невыпуклый многоугольник
//              A - максимум площади, P - максимум периметра 
//
//**************************** 24.10.2015 *********************************//

Def<Rhombus2d> maxRhombusInPolygonA ( CCArrRef<Vector2d> & poly );
Def<Rhombus2d> maxRhombusInPolygonP ( CCArrRef<Vector2d> & poly );


//**************************** 02.10.2018 *********************************//
//
//              Максимальный по площади ромб вписанный
//              в невыпуклый многоугольник без вращения
//
//**************************** 02.10.2018 *********************************//

Def<Rhombus2d> maxRhombusInPolygonANR ( CCArrRef<Vector2d> & poly );


//**************************** 01.05.2009 *********************************//
//
//      Максимальный треугольник вписанный в выпуклый многоугольник
//
//**************************** 018.02.2018 *********************************//

Def<Triangle2d> maxTriangleInConvexPolygonA ( CCArrRef<Vector2d> & poly );


//**************************** 01.05.2009 *********************************//
//
//      Максимальный параллелограмм вписанный в выпуклый многоугольник
//              A - максимум площади, P - максимум периметра 
//
//**************************** 25.04.2020 *********************************//

Def<Parallelogram2d> maxParallelogramInConvexPolygonA ( CCArrRef<Vector2d> & poly );
Def<Parallelogram2d> maxParallelogramInConvexPolygonP ( CCArrRef<Vector2d> & poly );


//**************************** 01.05.2009 *********************************//
//
//      Максимальный четырёхугольник вписанный в выпуклый многоугольник
//
//**************************** 01.05.2009 *********************************//

bool maxQuadInConvexPolygonA ( FixArrRef<Vector2d, 4> & quad, CCArrRef<Vector2d> & poly );


//**************************** 04.12.2015 *********************************//
//
//       Максимальный N-угольник вписанный в выпуклый многоугольник
//
//**************************** 04.12.2015 *********************************//

bool maxNgonInConvexPolygonA ( ArrRef<Vector2d> & inner, CCArrRef<Vector2d> & outer );

#endif